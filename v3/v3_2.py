# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QDialog, QMainWindow, QMessageBox, QPushButton
class BankInterest(object):


    def __init__(self, summ, period, perc):
        self.summ = summ
        self.period = period
        self.perc = perc

# Differentiated formula
    def diff_int(self):
        arr = []
        mp_cnt = self.period * 12
        rest = self.summ
        mp_real = self.summ / (self.period * 12.0)
        while mp_cnt != 0:
            mp = mp_real + (rest * self.perc / 1200)
            arr.append(round(mp, 2))
            rest = rest - mp_real
            mp_cnt = mp_cnt - 1
        return arr, round(sum(arr), 2)

# Annuity formula
    def ann_int(self):
        mp_cnt = self.period * 12
        r = self.perc / 1200.0
        ak = (r * (1 + r) ** mp_cnt) / (((1 + r) ** mp_cnt) - 1)
        mp = self.summ * ak
        total = mp * mp_cnt
        return round(mp, 2), round(total, 2)

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(800, 721)
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                font = QtGui.QFont()
                font.setFamily("Niagara Engraved")
                self.centralwidget.setFont(font)
                self.centralwidget.setStyleSheet("background-color: rgb(37, 39, 48);")
                self.centralwidget.setObjectName("centralwidget")
                self.label = QtWidgets.QLabel(self.centralwidget)
                self.label.setGeometry(QtCore.QRect(0, 0, 800, 50))
                self.label.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 23pt \"Arial Black\";")
                self.label.setAlignment(QtCore.Qt.AlignCenter)
                self.label.setObjectName("label")
                self.vvsum = QtWidgets.QLabel(self.centralwidget)
                self.vvsum.setGeometry(QtCore.QRect(0, 90, 400, 50))
                self.vvsum.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vvsum.setAlignment(QtCore.Qt.AlignCenter)
                self.vvsum.setObjectName("vvsum")
                self.vvsum_2 = QtWidgets.QLabel(self.centralwidget)
                self.vvsum_2.setGeometry(QtCore.QRect(0, 230, 400, 50))
                self.vvsum_2.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vvsum_2.setAlignment(QtCore.Qt.AlignCenter)
                self.vvsum_2.setObjectName("vvsum_2")
                self.vvsum_3 = QtWidgets.QLabel(self.centralwidget)
                self.vvsum_3.setGeometry(QtCore.QRect(400, 90, 400, 51))
                self.vvsum_3.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vvsum_3.setAlignment(QtCore.Qt.AlignCenter)
                self.vvsum_3.setObjectName("vvsum_3")
                self.diff = QtWidgets.QRadioButton(self.centralwidget)
                self.diff.setGeometry(QtCore.QRect(400, 150, 391, 51))
                self.diff.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.diff.setObjectName("diff")
                self.summ = QtWidgets.QLineEdit(self.centralwidget)
                self.summ.setGeometry(QtCore.QRect(60, 150, 251, 51))
                self.summ.setStyleSheet("\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 20px;\n"
        "color: #FFF;\n"
        "padding-left: 20px;\n"
        "padding-right: 20px;\n"
        "background-color: rgb(34, 36, 44);\n"
        "\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "font: 87 13pt \"Arial Black\";")
                self.summ.setObjectName("summ")
                self.proc = QtWidgets.QLineEdit(self.centralwidget)
                self.proc.setGeometry(QtCore.QRect(60, 290, 251, 51))
                self.proc.setStyleSheet("\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 20px;\n"
        "color: #FFF;\n"
        "padding-left: 20px;\n"
        "padding-right: 20px;\n"
        "background-color: rgb(34, 36, 44);\n"
        "\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "font: 87 13pt \"Arial Black\";")
                self.proc.setObjectName("proc")
                self.annuit = QtWidgets.QRadioButton(self.centralwidget)
                self.annuit.setGeometry(QtCore.QRect(400, 200, 391, 51))
                self.annuit.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.annuit.setObjectName("annuit")
                self.pushButton = QtWidgets.QPushButton(self.centralwidget)
                self.pushButton.setGeometry(QtCore.QRect(480, 430, 241, 71))
                self.pushButton.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.pushButton.setObjectName("pushButton")
                self.sinm = QtWidgets.QLabel(self.centralwidget)
                self.sinm.setGeometry(QtCore.QRect(0, 520, 400, 50))
                self.sinm.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.sinm.setAlignment(QtCore.Qt.AlignCenter)
                self.sinm.setObjectName("sinm")
                self.sinmred = QtWidgets.QLabel(self.centralwidget)
                self.sinmred.setGeometry(QtCore.QRect(0, 570, 400, 50))
                self.sinmred.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 5px;\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "font: 87 15pt \"Arial Black\";")
                self.sinmred.setAlignment(QtCore.Qt.AlignCenter)
                self.sinmred.setObjectName("sinmred")
                self.vseg = QtWidgets.QLabel(self.centralwidget)
                self.vseg.setGeometry(QtCore.QRect(400, 520, 400, 50))
                self.vseg.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vseg.setAlignment(QtCore.Qt.AlignCenter)
                self.vseg.setObjectName("vseg")
                self.vsegred = QtWidgets.QLabel(self.centralwidget)
                self.vsegred.setGeometry(QtCore.QRect(400, 570, 400, 50))
                self.vsegred.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 5px;\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "font: 87 15pt \"Arial Black\";")
                self.vsegred.setAlignment(QtCore.Qt.AlignCenter)
                self.vsegred.setObjectName("vsegred")
                self.vvsum_4 = QtWidgets.QLabel(self.centralwidget)
                self.vvsum_4.setGeometry(QtCore.QRect(10, 370, 400, 50))
                self.vvsum_4.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vvsum_4.setAlignment(QtCore.Qt.AlignCenter)
                self.vvsum_4.setObjectName("vvsum_4")
                self.srok = QtWidgets.QLineEdit(self.centralwidget)
                self.srok.setGeometry(QtCore.QRect(60, 430, 251, 51))
                self.srok.setStyleSheet("\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 20px;\n"
        "color: #FFF;\n"
        "padding-left: 20px;\n"
        "padding-right: 20px;\n"
        "background-color: rgb(34, 36, 44);\n"
        "\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "font: 87 13pt \"Arial Black\";")
                self.srok.setObjectName("srok")
                self.sumnedred = QtWidgets.QLineEdit(self.centralwidget)
                self.sumnedred.setGeometry(QtCore.QRect(470, 330, 251, 51))
                self.sumnedred.setStyleSheet("\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 20px;\n"
        "color: #FFF;\n"
        "padding-left: 20px;\n"
        "padding-right: 20px;\n"
        "background-color: rgb(34, 36, 44);\n"
        "\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "font: 87 13pt \"Arial Black\";")
                self.sumnedred.setObjectName("sumnedred")
                self.vvsum_5 = QtWidgets.QLabel(self.centralwidget)
                self.vvsum_5.setGeometry(QtCore.QRect(400, 280, 400, 50))
                self.vvsum_5.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 15pt \"Arial Black\";")
                self.vvsum_5.setAlignment(QtCore.Qt.AlignCenter)
                self.vvsum_5.setObjectName("vvsum_5")
                self.vseg_2 = QtWidgets.QLabel(self.centralwidget)
                self.vseg_2.setGeometry(QtCore.QRect(200, 620, 400, 50))
                self.vseg_2.setStyleSheet("\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 20pt \"Arial Black\";")
                self.vseg_2.setAlignment(QtCore.Qt.AlignCenter)
                self.vseg_2.setObjectName("vseg_2")
                self.pereplata = QtWidgets.QLabel(self.centralwidget)
                self.pereplata.setGeometry(QtCore.QRect(200, 670, 400, 50))
                self.pereplata.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "border: 2px solid rgb(37, 39, 48); border-radius: 5px;\n"
        "border: 2px solid rgb(48, 50, 62);\n"
        "border: 2px solid rgb(85, 170, 255); background-color: rgb(43, 45, 56);\n"
        "font: 87 15pt \"Arial Black\";")
                self.pereplata.setAlignment(QtCore.Qt.AlignCenter)
                self.pereplata.setObjectName("pereplata")
                self.comboBox = QtWidgets.QComboBox(self.centralwidget)
                self.comboBox.setGeometry(QtCore.QRect(320, 440, 101, 31))
                self.comboBox.setStyleSheet("background-color: rgb(43, 45, 56);\n"
        "color: rgb(255, 255, 255);\n"
        "\n"
        "\n"
        "font: 87 13pt \"Arial Black\";")
                self.comboBox.setObjectName("comboBox")
                self.comboBox.addItem("")
                self.comboBox.addItem("")
                MainWindow.setCentralWidget(self.centralwidget)

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)
                self.add_functions()
                

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "Ипотечный калькулятор"))
                self.label.setText(_translate("MainWindow", "Ипотечный калькулятор"))
                self.vvsum.setText(_translate("MainWindow", "Введите первый взнос"))
                self.vvsum_2.setText(_translate("MainWindow", "Введите процент"))
                self.vvsum_3.setText(_translate("MainWindow", "Выберите тип платежей"))
                self.diff.setText(_translate("MainWindow", "Дифференцированные "))
                self.annuit.setText(_translate("MainWindow", "Аннуитентные"))
                self.pushButton.setText(_translate("MainWindow", "Рассчитать"))
                self.sinm.setText(_translate("MainWindow", "Сумма в месяц"))
                self.sinmred.setText(_translate("MainWindow", "~"))
                self.vseg.setText(_translate("MainWindow", "Сумма с процентами "))
                self.vsegred.setText(_translate("MainWindow", "~"))
                self.vvsum_4.setText(_translate("MainWindow", "Введите срок кредита"))
                self.vvsum_5.setText(_translate("MainWindow", "Введите сумму ипотеки"))
                self.vseg_2.setText(_translate("MainWindow", "Переплата"))
                self.pereplata.setText(_translate("MainWindow", "~"))
                self.comboBox.setItemText(0, _translate("MainWindow", "г\\лет"))
                self.comboBox.setItemText(1, _translate("MainWindow", "мес"))


        def add_functions(self):
                self.pushButton.clicked.connect(self.raschet)
                
        def oshibka(self, toshibka):
                dlg = QMessageBox()
                dlg.setWindowTitle("Ошибка")
                dlg.setText(toshibka)
                button = dlg.exec()

                if button == QMessageBox.Ok:
                        print("OK!")

        def checker_perv(self,s):
            k = 0
            try:
                    perv =  int(self.summ.text())
            except ValueError:
                    perv = -1
                    k += 1
            try:
                a = list(self.summ.text())
            except IndexError:
                a[0] = 1 
            try: 
                if a[0] == '-':
                    perv = -1
                    k += 1
            except IndexError:
                k += 1
            c = self.summ.text()
            print(c)
            if c == '':
                perv = 0
                k = 0
            if k > 0:
                self.sinmred.setText('Ошибка')
                self.vsegred.setText('Ошибка')
                self.pereplata.setText('Ошибка')
                s = s + 'Первый взнос введен некорректно\n'
            return perv, s

        def checker_procenty(self,s):
            k = 0
            try:
                    procenty = int(self.proc.text())
            except ValueError:
                    procenty = -1
                    k += 1
            try:
                    procenty = float(self.proc.text())
            except ValueError:
                    procenty = -1
                    k += 1
            try:
                a = list(self.proc.text())
            except IndexError:
                a[0] = 1
            try: 
                if a[0] == '-':
                    procenty = -1
                    k += 1
            except IndexError:
                k += 1
            if procenty > 100 or procenty == 0:
                procenty = -1
                k += 1 
            if k > 0:
                self.sinmred.setText('Ошибка')
                self.vsegred.setText('Ошибка')
                self.pereplata.setText('Ошибка')
                s = s + 'Процент введен некорректно\n'
            return procenty, s

        def checker_srok(self,s):
            k = 0
            try:
                    srok =  int(self.srok.text())
            except ValueError:
                    srok = -1
                    k += 1
            try:
                a = list(self.srok.text())
            except IndexError:
                a[0] = 1
            try: 
                if a[0] == '-':
                    srok = -1
                    k += 1
            except IndexError:
                k += 1
            comboValue = self.comboBox.currentText()
            print (comboValue)
            if comboValue == 'мес' and srok != -1:
                        srok = srok/12
            if k > 0:
                self.sinmred.setText('Ошибка')
                self.vsegred.setText('Ошибка')
                self.pereplata.setText('Ошибка')
                s = s + 'Срок введен некорректно\n'
            else:
                if srok == 0 or srok > 60:
                    srok = -1
                    self.sinmred.setText('Ошибка')
                    self.vsegred.setText('Ошибка')
                    self.pereplata.setText('Ошибка')
                    s = s + 'Срок укажите в диапазоне от 1 месяца до 60 лет\n'

            return srok, s

        def checker_ipoteca(self,s, perv):
            k = 0
            try:
                ipoteca =  int(self.sumnedred.text())
            except ValueError:
                ipoteca = -1
                k += 1
            try:
                a = list(self.sumnedred.text())
            except IndexError:
                a[0] = 1
            try: 
                if a[0] == '-':
                    ipoteca = -1
                    k += 1
            except IndexError:
                k += 1
            if k > 0:
                self.sinmred.setText('Ошибка')
                self.vsegred.setText('Ошибка')
                self.pereplata.setText('Ошибка')
                s = s + 'Сумма ипотеки введена некорректно\n'
            elif ipoteca == 0:
                    ipoteca = -1
                    self.sinmred.setText('Ошибка')
                    self.vsegred.setText('Ошибка')
                    self.pereplata.setText('Ошибка')
                    s = s + 'Сумма ипотеки не может быть равна 0\n'
            else:
                if perv>=ipoteca:
                    ipoteca = -1
                    self.sinmred.setText('Ошибка')
                    self.vsegred.setText('Ошибка')
                    self.pereplata.setText('Ошибка')
                    s = s + 'Первый взнос больше или равен cумме ипотеки\n'

            return ipoteca, s

        def checker_tipplat(self,s):
            plat = 1
            if not (self.diff.isChecked() or self.annuit.isChecked()):
                plat = -1
                self.sinmred.setText('Ошибка')
                self.vsegred.setText('Ошибка')
                self.pereplata.setText('Ошибка')
                s = s + 'Тип платежей не выбран\n'

            return plat, s

        def raschet(self):
                s = ''
                perv,s = self.checker_perv(s)
                procenty,s = self.checker_procenty(s)
                srok,s = self.checker_srok(s)
                ipoteca,s = self.checker_ipoteca(s,perv)
                plat,s = self.checker_tipplat(s) 
                
                if (perv != -1 and procenty != -1 and srok != -1 and ipoteca != -1 and plat != -1):
                        cymma = ipoteca - perv
                        a = BankInterest(cymma, srok, procenty)
                        if self.diff.isChecked():
                                arr, total = a.diff_int()
                                self.sinm.setText("Сумма в месяц")
                                itog = (srok*12)-1
                                itog = str(arr[itog])
                                self.sinmred.setText(str(arr[0]) + '...'+ itog +' р')
                                self.vsegred.setText(str(total) + ' р')
                                perepl = total - (ipoteca - perv)
                                self.pereplata.setText(str(round(perepl, 2)) + ' р')
                                print(arr)

                        if self.annuit.isChecked():
                                mp, total = a.ann_int()
                                self.sinm.setText("Сумма в месяц")
                                self.sinmred.setText(str(mp) + ' р')
                                self.vsegred.setText(str(total) + ' р')
                                perepl = total - (ipoteca - perv)
                                self.pereplata.setText(str(round(perepl, 2)) + ' р')
                else:
                       self.oshibka(s)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
